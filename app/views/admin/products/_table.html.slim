- if @products.present?
  table.table.table-bordered
    thead
      tr
        th.text-center.length-medium
          = t('product.name')
        th.text-center.length-medium
          = t('category.name') 
        th.text-center.length-medium
          = t('publisher.name')
        th.text-center.length-medium
          = t('text.image')
        th.text-center.length-small
          = t('text.remaining_amount') 
        th.text-center.length-small
          = t('text.sell_amount')
        th.text-center.length-small
          = t('text.price')
        th.text-center.length-small
          = t('text.status') 
        th.text-center.length-medium
          = t('text.created_at')
        th.text-center.length-medium
          = t('text.updated_at')
        th.text-center.length-small[colspan="3"]
          = t('text.setting')
    tbody
      - @products.each do |product|
        tr
          td
            = product.name
          td
            = link_to product.category.name, [:admin, product.category]
          td
            = link_to product.publisher.name, [:admin, product.publisher]
          td
            img.list-product-img src = product.image_url
          td
            = product.remaining_amount_label
          td
            = product.sell_amount_label
          td
            = product.price_label
          td
            = product.status_label
          td
            = product.created_at_label
          td
            = product.updated_at_label
          td.text-center
            = link_to [:admin, product] do
              span.glyphicon.glyphicon-list-alt
          td.text-center
            = link_to edit_admin_product_path(product) do
              span.glyphicon.glyphicon-edit
          td.text-center
            = link_to [:admin, product], method: :delete, data: { confirm: t('confirm.delete') } do
              span.glyphicon.glyphicon-trash
      = paginate @products
- else
  h4
    | NO DATA
